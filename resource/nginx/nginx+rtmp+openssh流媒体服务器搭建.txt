1.先下载安装  nginx 和 nginx-rtmp 编译依赖工具 pcre zlib
sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-dev

	1>pcre wget https://sourceforge.net/projects/pcre/files/pcre/8.42/pcre-8.42.tar.gz，上传到linux后，直接./configure 配置 ， make编译 ,make check 测试，make install
	(如果报错Invalid C++ compiler or C++ compiler flags ，则 apt install gcc gcc++ ，
	apt install g++ )

	2>zlib  http://www.zlib.net/ 下载 wget http://www.zlib.net/zlib-1.2.11.tar.gz
	./configure 配置 ， make编译 ,make check 测试，make install
	3>openssl wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1a.tar.gz(记住用config不要用configure)
	./config  --prefix=`pwd`/libs 配置 ， make编译 ,make check 测试，make install ，待所有执行完成之后，发现libs里面有库

2. 创建一个工作目录，并切换到工作目录
mkdir /usr/jason/nginx
cd /usr/jason/nginx

3. 下载 nginx 和 nginx-rtmp源码（wget是一个从网络上自动下载文件的自由工具）
wget https://github.com/nginx/nginx/archive/release-1.15.8.tar.gz
wget https://github.com/arut/nginx-rtmp-module/archive/v1.2.1.tar.gz

4. 安装unzip工具，解压下载的安装包
sudo apt-get install unzip

5.解压 nginx 和 nginx-rtmp安装包
tar -zxvf release-1.15.8.tar.gz
-zxvf分别是四个参数
x : 从 tar 包中把文件提取出来
z : 表示 tar 包是被 gzip 压缩过的，所以解压时需要用 gunzip 解压
v : 显示详细信息
f xxx.tar.gz :  指定被处理的文件是 xxx.tar.gz

unzip master.zip

6. 切换到 nginx-目录
cd nginx-release-1.15.8

7.添加 nginx-rtmp 模板编译到 nginx
./auto/configure --add-module=/test2/nginx/nginx-rtmp-module-1.2.1 --with-openssl=/test2/nginx/openssl-OpenSSL_1_1_1a

如果pcre和zlib出现类似的问题，指定路径就可。
--with-pcre=/usr/local/pcre-7.7 --with-zlib=/usr/local/zlib-1.2.3 --with-http_stub_status_module）

出现下面，则代表成功了，都found了
Configuration summary
  + using system PCRE library
  + using OpenSSL library: /test2/nginx/openssl-OpenSSL_1_1_1a
  + using system zlib library
	...


8.编译安装
make
make install

生成的路径在：/usr/local/nginx里面 , 脚本在/usr/local/nginx/sbin里面



9.配置nginx
	cp /test2/nginx/nginx-rtmp-module-1.2.1/test/nginx.conf /usr/local/nginx/conf/nginx.conf

10. 启动nginx
	cd /usr/local/nginx/sbin
	执行 ./nginx  启动
	（部分机器上面可能出现Nginx: error while loading shared libraries: libpcre.so.1
	需要把pcro里面的so 拷贝到lib文件夹里面即可,ln -s /usr/local/lib/libpcre.so.1 /lib64/）

	lsof -i tcp:8080  检测8080是否被占据，如果被其他pid占据就直接kill其他的pid(kill 7056(占用8080端口的pid))
11. 停止nginx
	./nginx -s stop

	推流：.\ffmpeg.exe -re -i D:\android\ffmpeg\source\4.1\ffmpeg-4.1-win64-static\bin\input.mp4 -vcodec libx264 -acodec aac -f flv rtmp://192.168.139.128/myapp/mystream

		备注：192.168.139.128 是服务器的ip, myapp 是自己配置conf里面的rtmp的名字，mystream是秘钥，随便写的一个名字

	拉流：rtmp://192.168.139.128/myapp/mystream
	使用VLC:
		File->Open Network…
		设置拉流地址：rtmp://localhost:1066/rtmplive/home


------------------------------------------------------------------------------------------------------------

rtmp-dump 推流源码
	下载地址：http://rtmpdump.mplayerhq.hu/  ;  
	2.4版本的 git : git clone git：//git.ffmpeg.org/rtmpdump  、
原本rtmp-dump编译需要openSSl,但是也支持不继承openSSl，支持直接copy到项目中去编译

1 . linux编译：
	实际上rtmp只需要librtmp这部分源码即可
	1>下载下来的代码需要修改makeFile文件
	


2 . androidStudio里面编译：
	1>拷贝：librtmp部分.h,.c文件copy到cpp目录中

	2>设置不适用OpenSSL 
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DNO_CRYPTO")

	3>加入rtmp源码编译
	src/main/cpp/librtmp/amf.c
	src/main/cpp/librtmp/hashswf.c
	src/main/cpp/librtmp/log.c
	src/main/cpp/librtmp/parseurl.c
	src/main/cpp/librtmp/rtmp.c



------------------------------------------------------------------------------------------------------------




9. 安装nginx init 脚本
sudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginx
sudo chmod u+x /etc/init.d/nginx
sudo update-rc.d nginx defaults

10. 启动和停止nginx 服务，生成配置文件
sudo service nginx start
sudo service nginx stop

11. 安装 FFmpeg(./configure 执行安装ffmpeg)
make
make install

12. 配置 nginx-rtmp 服务器
打开 /usr/local/nginx/conf/nginx.conf
在末尾添加如下 配置

复制代码
rtmp {
    server {
            listen 1935;	// 端口号
            chunk_size 4096;

            application live {
                    live on;
                    record off;
                    exec ffmpeg -i rtmp://localhost/live/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 350K -s 640x360 -f flv -c:a aac -ac 1 -strict -2 -b:a 56k rtmp://localhost/live360p/$name;
            }
            application live360p {
                    live on;
                    record off;
        }
    }
}
复制代码
13. 保存上面配置文件，然后重新启动nginx服务
sudo service nginx restart

14. 如果你使用了防火墙，请允许端口 tcp 1935

16: 使用 客户端，使用 rtmp协议进行视频实时采集
Field 1: rtmp://your.vultr.ip/live/
Field 2: stream-key-your-set


服务器配置测试播放器：
将flash播放器复制到目录：/usr/local/nginx/html/，然后修改播放地址
vim index.html (src : xxxxx:xxx  ip及端口更换)


用ffplay播放RTMP直播流：
ffplay "rtmp://pub1.guoshi.com/live/newcetv1 live=1"

